{"ast":null,"code":"// state - previous state or initial state \n// when it first fires userReducer the state will be empty that's we have to pass some initial value as default parameter to 'state'\n// action - object which contains 'type' and 'payload'\n// import UserActionTypes from './user-actions.js';\nconst INIT_STATE = {\n  currentUser: null,\n  error: null\n};\n\nconst UserReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case 'SIGNIN_SUCCESS':\n      {\n        return { ...state,\n          currentUser: action.payload,\n          // modify this value and return new object so React can detect changes\n          error: null\n        };\n      }\n\n    case 'SIGN_OUT_SUCCESS':\n      {\n        return { ...state,\n          currentUser: null\n        };\n      }\n\n    case 'SIGNIN_FAILURE':\n    case 'SIGN_OUT_FAILURE':\n      {\n        return { ...state,\n          error: action.payload\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default UserReducer;","map":{"version":3,"sources":["C:/Users/prash/Desktop/React/ecom-clothing/src/redux/user/user-reducer.js"],"names":["INIT_STATE","currentUser","error","UserReducer","state","action","type","payload"],"mappings":"AAAA;AACA;AAEA;AAEA;AAEA,MAAMA,UAAU,GAAG;AACfC,EAAAA,WAAW,EAAE,IADE;AAEfC,EAAAA,KAAK,EAAE;AAFQ,CAAnB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,UAAT,EAAqBK,MAArB,KAAgC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGF,KADA;AAEHH,UAAAA,WAAW,EAAEI,MAAM,CAACE,OAFjB;AAE0B;AAC7BL,UAAAA,KAAK,EAAE;AAHJ,SAAP;AAKH;;AAED,SAAK,kBAAL;AAAyB;AACrB,eAAO,EACH,GAAGE,KADA;AAEHH,UAAAA,WAAW,EAAE;AAFV,SAAP;AAIH;;AAED,SAAK,gBAAL;AACA,SAAK,kBAAL;AAAyB;AACrB,eAAO,EACH,GAAGG,KADA;AAEHF,UAAAA,KAAK,EAAEG,MAAM,CAACE;AAFX,SAAP;AAKH;;AAGD;AAAS;AACL,eAAOH,KAAP;AACH;AA5BL;AA8BH,CA/BD;;AAiCA,eAAeD,WAAf","sourcesContent":["// state - previous state or initial state \r\n// when it first fires userReducer the state will be empty that's we have to pass some initial value as default parameter to 'state'\r\n\r\n// action - object which contains 'type' and 'payload'\r\n\r\n// import UserActionTypes from './user-actions.js';\r\n\r\nconst INIT_STATE = {\r\n    currentUser: null,\r\n    error: null\r\n}\r\n\r\nconst UserReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SIGNIN_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload, // modify this value and return new object so React can detect changes\r\n                error: null,\r\n            }\r\n        }\r\n\r\n        case 'SIGN_OUT_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                currentUser: null\r\n            }\r\n        }\r\n\r\n        case 'SIGNIN_FAILURE':\r\n        case 'SIGN_OUT_FAILURE': {\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n\r\n            }\r\n        }\r\n\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserReducer;\r\n"]},"metadata":{},"sourceType":"module"}