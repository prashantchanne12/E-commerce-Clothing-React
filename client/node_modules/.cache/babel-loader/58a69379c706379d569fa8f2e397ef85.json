{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prash\\\\Desktop\\\\React\\\\ecom-clothing\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectCartItems } from \"../../redux/cart/cart-selectors.js\";\nimport CustomButton from \"../custom-button/custom-button.jsx\";\nimport CartItem from \"../cart-item/cart-item.jsx\"; // import \"./cart-dropdown.scss\";\n\nimport { CartDropdownContainer, CartItemsContainer, EmptyMsgContainer } from \"./cart-dropdown-styles\";\nimport { toggleCartHidden } from \"../../redux/cart/cart-actions\";\nimport { withRouter } from \"react-router-dom\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(CartDropdownContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CartItemsContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, Object.assign({\n  key: cartItem.id\n}, cartItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }\n}))) : /*#__PURE__*/React.createElement(EmptyMsgContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }\n}, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, \"CHECKOUT\"));\n\nconst mapStateToProps = state => ({\n  cartItems: selectCartItems(state)\n});\n\nexport default withRouter(connect(mapStateToProps, null)(CartDropdown));","map":{"version":3,"sources":["C:/Users/prash/Desktop/React/ecom-clothing/src/components/cart-dropdown/cart-dropdown.jsx"],"names":["React","connect","selectCartItems","CustomButton","CartItem","CartDropdownContainer","CartItemsContainer","EmptyMsgContainer","toggleCartHidden","withRouter","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,oCAAhC;AAEA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CACA;;AACA,SACEC,qBADF,EAEEC,kBAFF,EAGEC,iBAHF,QAIO,wBAJP;AAMA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBACnB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAeC,QAAD,iBACZ,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC;AAAxB,GAAgCD,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,CADD,gBAKC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADF,eAUE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CADF;;AAsBA,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,SAAS,EAAET,eAAe,CAACkB,KAAD;AADQ,CAAZ,CAAxB;;AAIA,eAAeX,UAAU,CAACR,OAAO,CAACkB,eAAD,EAAkB,IAAlB,CAAP,CAA+BT,YAA/B,CAAD,CAAzB","sourcesContent":["import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { selectCartItems } from \"../../redux/cart/cart-selectors.js\";\r\n\r\nimport CustomButton from \"../custom-button/custom-button.jsx\";\r\nimport CartItem from \"../cart-item/cart-item.jsx\";\r\n// import \"./cart-dropdown.scss\";\r\nimport {\r\n  CartDropdownContainer,\r\n  CartItemsContainer,\r\n  EmptyMsgContainer,\r\n} from \"./cart-dropdown-styles\";\r\n\r\nimport { toggleCartHidden } from \"../../redux/cart/cart-actions\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\r\n  <CartDropdownContainer>\r\n    <CartItemsContainer>\r\n      {cartItems.length ? (\r\n        cartItems.map((cartItem) => (\r\n          <CartItem key={cartItem.id} {...cartItem} />\r\n        ))\r\n      ) : (\r\n        <EmptyMsgContainer>Your cart is empty</EmptyMsgContainer>\r\n      )}\r\n    </CartItemsContainer>\r\n    <CustomButton\r\n      onClick={() => {\r\n        history.push(\"/checkout\");\r\n        dispatch(toggleCartHidden());\r\n      }}\r\n    >\r\n      CHECKOUT\r\n    </CustomButton>\r\n  </CartDropdownContainer>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cartItems: selectCartItems(state),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(CartDropdown));\r\n"]},"metadata":{},"sourceType":"module"}