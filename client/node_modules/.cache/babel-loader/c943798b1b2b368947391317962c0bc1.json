{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prash\\\\Desktop\\\\React\\\\ecom-clothing\\\\src\\\\pages\\\\shop\\\\shop.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview-container\";\nimport CollectionContainer from \"../collection/collection-container\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop-actions\";\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  unsubscribeFromSnapshot = null;\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}; // props in render - are the parameters that our components are going to recieve ex. history, match etc.\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage); // the point of using an HOC is to abstract common functionality to a separate component so that we can re-use it and not repeat ourselves.\n// It's to inject common functionality into other components without repeatedly making different components that do the same thing.","map":{"version":3,"sources":["C:/Users/prash/Desktop/React/ecom-clothing/src/pages/shop/shop.jsx"],"names":["React","useEffect","Route","CollectionsOverviewContainer","CollectionContainer","connect","fetchCollectionsStart","ShopPage","match","unsubscribeFromSnapshot","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAAsC;AACrDG,EAAAA,uBAAuB,GAAG,IAA1B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGE,IAAA,SAAS,EAAEP,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEK,KAAK,CAACE,IAAK,gBADtB;AAEE,IAAA,SAAS,EAAEN,mBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAaD,CApBD,C,CAsBA;;;AAEA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,qBAAqB,EAAE,MAAMM,QAAQ,CAACN,qBAAqB,EAAtB;AADG,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOM,kBAAP,CAAP,CAAkCJ,QAAlC,CAAf,C,CAEA;AAEA","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview-container\";\r\nimport CollectionContainer from \"../collection/collection-container\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStart } from \"../../redux/shop/shop-actions\";\r\n\r\nconst ShopPage = ({ match, fetchCollectionsStart }) => {\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  useEffect(() => {\r\n    fetchCollectionsStart();\r\n  }, [fetchCollectionsStart]);\r\n\r\n  return (\r\n    <div className=\"shop-page\">\r\n      <Route\r\n        exact\r\n        path={`${match.path}`}\r\n        component={CollectionsOverviewContainer}\r\n      />\r\n      <Route\r\n        path={`${match.path}/:collectionId`}\r\n        component={CollectionContainer}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// props in render - are the parameters that our components are going to recieve ex. history, match etc.\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n\r\n// the point of using an HOC is to abstract common functionality to a separate component so that we can re-use it and not repeat ourselves.\r\n\r\n// It's to inject common functionality into other components without repeatedly making different components that do the same thing.\r\n"]},"metadata":{},"sourceType":"module"}