{"ast":null,"code":"// Listening For Every Specific Actions\nimport { takeEvery } from 'redux-saga/effects'; // Functions pauses whenever we hit yield until we call next(), then our function continues\n// redux-saga middleware runs all sagas concurrently\n// all sagas runs on async thread\n// -------- SAGA ---------\n\nexport function* fetchCollectionAsync() {\n  yield console.log('SAGA FIRED');\n  const collectionRef = firestore.collection(\"collection\");\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convetCollectionSnapshotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionsMap));\n  }).catch(error => {\n    dispatch(fetchCollectionsFailure(error.message));\n  });\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery('FETCH_COLLECTION_START', fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/prash/Desktop/React/ecom-clothing/src/redux/shop/shop-saga.js"],"names":["takeEvery","fetchCollectionAsync","console","log","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convetCollectionSnapshotToMap","dispatch","fetchCollectionSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart"],"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,oBAA1B,C,CAEA;AAEA;AAEA;AAEA;;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,YAArB,CAAtB;AAGAF,EAAAA,aAAa,CACRG,GADL,GAEKC,IAFL,CAEWC,QAAD,IAAc;AAChB,UAAMC,cAAc,GAAGC,6BAA6B,CAACF,QAAD,CAApD;AAEAG,IAAAA,QAAQ,CAACC,sBAAsB,CAACH,cAAD,CAAvB,CAAR;AACH,GANL,EAMOI,KANP,CAMaC,KAAK,IAAI;AACdH,IAAAA,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAAR;AACH,GARL;AASH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMlB,SAAS,CAAC,wBAAD,EAA2BC,oBAA3B,CAAf;AACH","sourcesContent":["// Listening For Every Specific Actions\r\nimport { takeEvery } from 'redux-saga/effects';\r\n\r\n// Functions pauses whenever we hit yield until we call next(), then our function continues\r\n\r\n// redux-saga middleware runs all sagas concurrently\r\n\r\n// all sagas runs on async thread\r\n\r\n// -------- SAGA ---------\r\n\r\nexport function* fetchCollectionAsync() {\r\n    yield console.log('SAGA FIRED');\r\n\r\n    const collectionRef = firestore.collection(\"collection\");\r\n\r\n\r\n    collectionRef\r\n        .get()\r\n        .then((snapshot) => {\r\n            const collectionsMap = convetCollectionSnapshotToMap(snapshot);\r\n\r\n            dispatch(fetchCollectionSuccess(collectionsMap));\r\n        }).catch(error => {\r\n            dispatch(fetchCollectionsFailure(error.message));\r\n        });\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery('FETCH_COLLECTION_START', fetchCollectionAsync)\r\n}"]},"metadata":{},"sourceType":"module"}