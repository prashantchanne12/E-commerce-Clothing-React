{"ast":null,"code":"// GOOGLE_SIGNIN_START\n// GOOGLE_SIGNIN_SUCCESS\n// GOOGLE_SIGNIN_FAILURE\n// EMAIL_SIGNIN_START\n// EMAIL_SIGNIN_SUCCESS\n// EMAIL_SIGNIN_FAILURE\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user-actions';\nexport function* getSnapshotFromUserAuth(user, dName = null) {\n  try {\n    const userRef = yield call(createUserProfileDocument, (user, dName));\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    yield console.log('gooooooogle');\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const user = yield getCurrentUser();\n    if (!user) return;\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error.message));\n  }\n}\nexport function* signOut() {\n  try {\n    auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    dName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user, dName);\n  } catch (error) {\n    yield put(signUpFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest('GOOGLE_SIGNIN_START', signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest('EMAIL_SIGNIN_START', signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest('CHECK_USER_SESSION', isUserAuthenticated);\n}\nexport function* onUserSignOutStart() {\n  yield takeLatest('SIGN_OUT_START', signOut);\n}\nexport function* onUserSignUpStart() {\n  yield takeLatest('SIGN_UP_START', signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onUserSignOutStart), call(onUserSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/prash/Desktop/React/ecom-clothing/src/redux/user/user-saga.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","user","dName","userRef","userSnapshot","get","id","data","error","message","signInWithGoogle","console","log","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","createUserWithEmailAndPassword","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","onUserSignOutStart","onUserSignUpStart","userSagas"],"mappings":"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","sourcesContent":["// GOOGLE_SIGNIN_START\r\n// GOOGLE_SIGNIN_SUCCESS\r\n// GOOGLE_SIGNIN_FAILURE\r\n\r\n// EMAIL_SIGNIN_START\r\n// EMAIL_SIGNIN_SUCCESS\r\n// EMAIL_SIGNIN_FAILURE\r\n\r\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase';\r\n\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user-actions'\r\n\r\nexport function* getSnapshotFromUserAuth(user, dName=null) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, (user, dName));\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        yield console.log('gooooooogle')\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const user = yield getCurrentUser();\r\n        if (!user) return;\r\n        yield getSnapshotFromUserAuth(user);\r\n\r\n    } catch (error) {\r\n        put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signUp({ payload: { email, password, dName } }) {\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user, dName);\r\n    } catch (error) {\r\n        yield put(signUpFailure(error.message));\r\n    }\r\n}\r\n\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest('GOOGLE_SIGNIN_START', signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest('EMAIL_SIGNIN_START', signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest('CHECK_USER_SESSION', isUserAuthenticated);\r\n}\r\n\r\nexport function* onUserSignOutStart() {\r\n    yield takeLatest('SIGN_OUT_START', signOut);\r\n}\r\n\r\nexport function* onUserSignUpStart() {\r\n    yield takeLatest('SIGN_UP_START', signUp)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all(\r\n        [\r\n            call(onGoogleSignInStart),\r\n            call(onEmailSignInStart),\r\n            call(onCheckUserSession),\r\n            call(onUserSignOutStart),\r\n            call(onUserSignUpStart),\r\n        ]\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}